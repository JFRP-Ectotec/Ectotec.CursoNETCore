// <auto-generated />
using System;
using Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Torneo", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("binary(16)")
                        .HasColumnName("id")
                        .HasComment("Identificador del registro.");

                    b.Property<string>("Comentarios")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("comentarios")
                        .HasComment("Comentarios relevantes al torneo.");

                    b.Property<string>("Liga")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("liga")
                        .HasComment("Liga del torneo.");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("nombre")
                        .HasComment("Nombre del torneo.");

                    b.HasKey("Id");

                    b.ToTable("torneo", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Torneo", b =>
                {
                    b.OwnsMany("Domain.Entities.Posicion", "Posiciones", b1 =>
                        {
                            b1.Property<Guid>("torneo_id")
                                .HasColumnType("binary(16)");

                            b1.Property<int>("Id1")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b1.Property<int>("Id1"));

                            b1.Property<int>("Empates")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasDefaultValue(0)
                                .HasColumnName("empates")
                                .HasComment("Empates.");

                            b1.Property<int>("Ganados")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasDefaultValue(0)
                                .HasColumnName("ganados")
                                .HasComment("Ganados.");

                            b1.Property<int>("Perdidos")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasDefaultValue(0)
                                .HasColumnName("perdidos")
                                .HasComment("Perdidos.");

                            b1.Property<float>("Porcentaje")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("float")
                                .HasDefaultValue(0f)
                                .HasColumnName("porcentaje")
                                .HasComment("Porccentaje.");

                            b1.Property<int>("Puntos")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasDefaultValue(0)
                                .HasColumnName("puntos")
                                .HasComment("Puntos obtenidos.");

                            b1.Property<int?>("ScoreContra")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasDefaultValue(0)
                                .HasColumnName("scoreContra")
                                .HasComment("Score en contra obtenido.");

                            b1.Property<int?>("ScoreFavor")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasDefaultValue(0)
                                .HasColumnName("scoreFavor")
                                .HasComment("Score a favor obtenido.");

                            b1.HasKey("torneo_id", "Id1");

                            b1.ToTable("posicion", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("torneo_id")
                                .HasConstraintName("FK_posicion_torneo");

                            b1.OwnsOne("Domain.Entities.EquipoTor", "Id", b2 =>
                                {
                                    b2.Property<Guid>("Posiciontorneo_id")
                                        .HasColumnType("binary(16)");

                                    b2.Property<int>("PosicionId1")
                                        .HasColumnType("int");

                                    b2.Property<string>("Club")
                                        .IsRequired()
                                        .HasMaxLength(50)
                                        .HasColumnType("varchar(50)")
                                        .HasColumnName("club")
                                        .HasComment("club");

                                    b2.Property<string>("Etapa")
                                        .IsRequired()
                                        .HasMaxLength(20)
                                        .HasColumnType("varchar(20)")
                                        .HasColumnName("etapa")
                                        .HasComment("etapa");

                                    b2.Property<string>("Grupo")
                                        .IsRequired()
                                        .HasMaxLength(20)
                                        .HasColumnType("varchar(20)")
                                        .HasColumnName("grupo")
                                        .HasComment("grupo");

                                    b2.Property<string>("Liga")
                                        .IsRequired()
                                        .HasMaxLength(20)
                                        .HasColumnType("varchar(20)")
                                        .HasColumnName("liga")
                                        .HasComment("Liga");

                                    b2.Property<string>("Torneo")
                                        .IsRequired()
                                        .HasMaxLength(50)
                                        .HasColumnType("varchar(50)")
                                        .HasColumnName("torneo")
                                        .HasComment("torneo");

                                    b2.HasKey("Posiciontorneo_id", "PosicionId1");

                                    b2.ToTable("posicion");

                                    b2.WithOwner()
                                        .HasForeignKey("Posiciontorneo_id", "PosicionId1");
                                });

                            b1.Navigation("Id")
                                .IsRequired();
                        });

                    b.Navigation("Posiciones");
                });
#pragma warning restore 612, 618
        }
    }
}
